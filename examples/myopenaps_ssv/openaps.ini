[DEFAULT]
git = false

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "detect-sensitivity"]
vendor = openaps.vendors.process
extra = detect-sensitivity.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "pebble"]
vendor = openaps.vendors.process
extra = pebble.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[device "xdrip"]
vendor = openaps.vendors.process
extra = xdrip.ini

[report "settings/temptargets.json"]
oper = temp_targets
use = shell
reporter = JSON
device = ns
remainder = -18hours
json_default = True

[report "monitor/carbhistory.json"]
oper = carb_history
use = shell
reporter = JSON
device = ns
remainder = -36hours
json_default = True

[report "monitor/cgm-glucose.json"]
hours = 25.0
device = cgm
use = iter_glucose_hours
reporter = JSON

[report "raw-cgm/raw-entries.json"]
count = 
use = oref0_glucose
reporter = JSON
seconds = 
minutes = 
hours = 24
device = cgm
gaps = 
threshold = 100
microseconds = 
date = display_time
sensor = 
glucose = 

[report "cgm/ns-glucose.json"]
oper = oref0_glucose_since
use = shell
reporter = JSON
device = ns
remainder = -24hours
json_default = True

[report "monitor/mmtune.json"]
device = pump
use = mmtune
reporter = JSON

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "cgm/cgm-glucose.json"]
use = clean
reporter = JSON
astimezone = False
date = display_time dateString
adjust = missing
timezone = 
device = glucose
input = raw-cgm/raw-entries.json
infile = monitor/cgm-mm-glucosetrend.json

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
timezone = 
device = tz
input = monitor/clock.json

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = pump
use = status
reporter = JSON

[report "monitor/pumphistory.json"]
hours = 2.0
device = pump
use = iter_pump_hours
reporter = JSON

[report "settings/pumphistory-24h.json"]
hours = 27.0
device = pump
use = iter_pump_hours
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
timezone = 
device = tz
input = monitor/pumphistory.json

[report "settings/pumphistory-24h-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
timezone = 
device = tz
input = settings/pumphistory-24h.json

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-merged.json
device = iob
remainder = settings/autosens.json

[report "monitor/meal.json"]
profile = settings/profile.json
carbs = monitor/carbhistory.json
clock = monitor/clock-zoned.json
reporter = text
json_default = True
use = shell
pumphistory = monitor/pumphistory-merged.json
basal = settings/basal_profile.json
device = meal
remainder = 
glucose = monitor/glucose.json

[report "settings/autosens.json"]
profile = settings/profile.json
use = shell
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
pumphistory = settings/pumphistory-24h-zoned.json
device = detect-sensitivity
remainder = monitor/carbhistory.json settings/temptargets.json
isf = settings/insulin_sensitivities.json
glucose = monitor/glucose.json

[report "settings/bg_targets.json"]
device = units
to = mg/dL
use = bg_targets
input = settings/bg_targets_raw.json
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = units
to = mg/dL
use = insulin_sensitivities
input = settings/insulin_sensitivities_raw.json
reporter = JSON

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
carb_ratios = settings/carb_ratios.json
device = get-profile
remainder = settings/temptargets.json --model=settings/model.json --autotune settings/autotune.json
isf = settings/insulin_sensitivities.json

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
meal = monitor/meal.json
autosens = settings/autosens.json
device = determine-basal
remainder = settings/autosens.json monitor/meal.json
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "enact/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[report "upload/pebble.json"]
suggested = enact/suggested.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
meal = monitor/meal.json
device = pebble
enacted = enact/enacted.json
remainder = 
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "settings/bg_targets_raw.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities_raw.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "xdrip/glucose.json"]
device = xdrip
remainder = 
use = shell
json_default = True
reporter = text

[alias]
invoke = report invoke
mmtune = ! bash -c "reset_spi_serial.py 2>/dev/null; oref0_init_pump_comms.py; find monitor/ -size +5c | grep -q mmtune && cp monitor/mmtune.json mmtune_old.json; echo {} > monitor/mmtune.json; echo -n \"mmtune: \" && openaps report invoke monitor/mmtune.json; grep -v setFreq monitor/mmtune.json | grep -A2 $(json -a setFreq -f monitor/mmtune.json) | while read line; do echo -n \"$line \"; done"
wait-for-silence = ! bash -c "(mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 1 | grep -q comms && echo -n Radio ok, || openaps mmtune) && echo -n \" Listening: \"; for i in $(seq 1 100); do echo -n .; mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 30 2>/dev/null | egrep -v subg | egrep No && break; done"
wait-for-long-silence = ! bash -c "echo -n \"Listening: \"; for i in $(seq 1 200); do echo -n .; mmeowlink-any-pump-comms.py --port /dev/spidev5.1 --wait-for 45 2>/dev/null | egrep -v subg | egrep No && break; done"
monitor-cgm = report invoke monitor/cgm-mm-glucosedirty.json monitor/cgm-mm-glucosetrend.json cgm/cgm-glucose.json
get-ns-glucose = report invoke cgm/ns-glucose.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/iob.json monitor/reservoir.json monitor/battery.json monitor/status.json
ns-temptargets = report invoke settings/temptargets.json settings/profile.json
ns-meal-carbs = ! bash -c "openaps report invoke monitor/carbhistory.json; oref0-meal monitor/pumphistory-merged.json settings/profile.json monitor/clock-zoned.json monitor/glucose.json settings/basal_profile.json monitor/carbhistory.json > monitor/meal.json.new; grep -q COB monitor/meal.json.new && mv monitor/meal.json.new monitor/meal.json; exit 0"
get-settings = report invoke settings/model.json settings/bg_targets_raw.json settings/bg_targets.json settings/insulin_sensitivities_raw.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json settings/carb_ratios.json settings/pumpprofile.json settings/profile.json
bg-fresh-check = ! bash -c "cat cgm/glucose.json | json -c \"minAgo=(new Date()-new Date(this.dateString))/60/1000; return minAgo < 6 && minAgo > 0 && this.glucose > 38\" | grep -q glucose"
get-bg = ! bash -c " (echo -n MDT cgm data retrieve && openaps monitor-cgm 2>/dev/null >/dev/null && grep -q glucose cgm/cgm-glucose.json && echo d) && cp -pu cgm/cgm-glucose.json cgm/glucose.json && cp -pu cgm/glucose.json monitor/glucose-unzoned.json && (echo -n MDT cgm data reformat && openaps report invoke monitor/glucose.json nightscout/glucose.json 2>/dev/null >/dev/null && echo ted)"
get-ns-bg = ! bash -c "openaps get-ns-glucose && cat cgm/ns-glucose.json | json -c \"minAgo=(new Date()-new Date(this.dateString))/60/1000; return minAgo < 10 && minAgo > -5 && this.glucose > 38\" | grep -q glucose && cp -pu cgm/ns-glucose.json cgm/glucose.json; cp -pu cgm/glucose.json monitor/glucose.json"
gather = ! bash -c "openaps report invoke monitor/status.json 2>/dev/null >/dev/null && echo -n Ref && test $(cat monitor/status.json | json bolusing) == false && echo -n resh && ( openaps monitor-pump || openaps monitor-pump ) 2>/dev/null >/dev/null && echo ed pumphistory || (echo; exit 1) 2>/dev/null"
autosens = ! bash -c "date; (find settings/ -newer settings/autosens.json | grep -q pumphistory-24h-zoned.json || find settings/ -size -5c | grep -q autosens.json || ! find settings/ | grep -q autosens || ! find settings/autosens.json) && openaps invoke settings/autosens.json"
refresh-old-pumphistory = ! bash -c "find monitor/ -mmin -15 -size +100c | grep -q pumphistory-zoned || ( echo -n \"Old pumphistory: \" && openaps gather && openaps enact ) "
refresh-old-pumphistory-24h = ! bash -c "find settings/ -mmin -120 -size +100c | grep -q pumphistory-24h-zoned || (echo -n Old pumphistory-24h refresh && openaps report invoke settings/pumphistory-24h.json settings/pumphistory-24h-zoned.json 2>/dev/null >/dev/null && echo ed)"
refresh-temp-and-enact = ! bash -c "if( (find monitor/ -newer monitor/temp_basal.json | grep -q glucose.json && echo glucose.json newer than temp_basal.json ) || (! find monitor/ -mmin -5 -size +5c | grep -q temp_basal && echo temp_basal.json more than 5m old)); then (echo -n Temp refresh && openaps report invoke monitor/temp_basal.json monitor/clock.json monitor/clock-zoned.json monitor/iob.json 2>/dev/null >/dev/null && echo ed && if(cat monitor/temp_basal.json | json -c \"this.duration < 27\" | grep -q duration); then openaps enact; else echo Temp duration 27m or more; fi); else echo temp_basal.json less than 5m old; fi"
refresh-pumphistory-and-enact = ! bash -c "if ((find monitor/ -newer monitor/pumphistory-zoned.json | grep -q glucose.json && echo -n glucose.json newer than pumphistory) || (find enact/ -newer monitor/pumphistory-zoned.json | grep -q enacted.json && echo -n enacted.json newer than pumphistory) || (! find monitor/ -mmin -5 | grep -q pumphistory-zoned && echo -n pumphistory more than 5m old) ); then (echo -n \": \" && openaps gather && openaps enact ); else echo Pumphistory less than 5m old; fi "
refresh-old-profile = ! bash -c "find settings/ -mmin -60 -size +5c | grep -q settings/profile.json && echo Profile less than 60m old || (echo -n Old settings refresh && openaps get-settings 2>/dev/null >/dev/null && echo ed )"
refresh-profile = ! bash -c "find settings/ -mmin -10 -size +5c | grep -q settings.json && echo Settings less than 10m old || (echo -n Settings refresh && openaps get-settings 2>/dev/null >/dev/null && echo ed)"
refresh-pumphistory-24h = ! bash -c "find settings/ -mmin -20 -size +100c | grep -q pumphistory-24h-zoned && echo Pumphistory-24 less than 20m old || (echo -n pumphistory-24h refresh && openaps report invoke settings/pumphistory-24h.json settings/pumphistory-24h-zoned.json 2>/dev/null >/dev/null && echo ed)"
merge-pumphistory-long = ! bash -c "jq -s \".[0] + .[1]|unique|sort_by(.timestamp)|reverse\" settings/pumphistory-long.json monitor/pumphistory-zoned.json settings/pumphistory-24h-zoned.json > pumphistory-long.json.new && mv pumphistory-long.json.new settings/pumphistory-long.json"
enact = ! bash -c "rm enact/suggested.json; openaps invoke enact/suggested.json && if (cat enact/suggested.json && grep -q duration enact/suggested.json); then ( rm enact/enacted.json; openaps invoke enact/enacted.json ; grep -q duration enact/enacted.json || openaps invoke enact/enacted.json ) 2>&1 | egrep -v \"^  |subg_rfspy|handler\"; fi; grep incorrectly enact/suggested.json && oref0-set-system-clock 2>/dev/null; cat enact/enacted.json | json -0"
ns-loop = ! bash -c "echo Starting ns-loop at $(date): && openaps get-ns-bg; openaps ns-temptargets && echo -n Refreshed temptargets && openaps ns-meal-carbs && echo \" and meal-carbs\" && openaps battery-status; cat monitor/edison-battery.json; echo; openaps upload"
pump-loop = ! bash -c "sleep $[ ( $RANDOM / 2048 ) ]s; until(echo Starting pump-loop at $(date): && openaps wait-for-silence && openaps get-bg && openaps refresh-old-pumphistory && openaps refresh-old-pumphistory-24h && openaps refresh-old-profile && openaps refresh-temp-and-enact && openaps refresh-pumphistory-and-enact && openaps refresh-profile && openaps refresh-pumphistory-24h && echo Completed pump-loop at $(date) && echo); do echo Error, retrying && [[ $RANDOM > 25000 ]] && ( openaps wait-for-long-silence ; openaps mmtune; sleep 5 ); done"
pebble = ! bash -c "grep -q iob monitor/iob.json && grep -q absolute enact/suggested.json && openaps report invoke upload/pebble.json"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
format-ns-status = ! bash -c "ns-status monitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json --uploader monitor/edison-battery.json > upload/ns-status.json"
upload-ns-status = ! bash -c "grep -q iob monitor/iob.json && find enact/ -mmin -5 -size +5c | grep -q suggested.json && openaps format-ns-status && grep -q iob upload/ns-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json upload/ns-status.json"
upload = ! bash -c "echo -n Upload && ( openaps upload-bg; openaps upload-ns-status; openaps upload-recent-treatments ) 2>/dev/null >/dev/null && echo ed"
monitor-xdrip = report invoke xdrip/glucose.json
upload-bg = report invoke nightscout/recent-missing-entries.json nightscout/uploaded-entries.json
first-upload = ! bash -c "cat nightscout/glucose.json | json 1 > nightscout/recent-missing-entries.json && openaps report invoke nightscout/uploaded-entries.json"
battery-status = ! bash -c "sudo ~/src/EdisonVoltage/voltage json batteryVoltage battery > monitor/edison-battery.json"
upload-pbbl = ! bash -c "openaps use pbbl send_urchin_data upload/urchin-data.json"
urchin-loop = ! bash -c "openaps invoke upload/urchin-data.json && openaps upload-pbbl"

[vendor "openapscontrib.glucosetools"]
path = .
module = openapscontrib.glucosetools

[device "glucose"]
vendor = openapscontrib.glucosetools
extra = glucose.ini

[report "monitor/cgm-mm-glucosedirty.json"]
hours = 24.0
device = cgm
use = iter_glucose_hours
reporter = JSON

[report "monitor/cgm-mm-glucosetrend.json"]
device = oref0
remainder = mdt-trend monitor/cgm-mm-glucosedirty.json
use = shell
json_default = True
reporter = JSON

[report "monitor/glucose.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at display_time
adjust = missing
timezone = 
device = tz
input = monitor/glucose-unzoned.json

[report "nightscout/recent-missing-entries.json"]
oper = format-recent-type
use = shell
reporter = JSON
device = ns
remainder = tz entries nightscout/glucose.json
json_default = True

[report "nightscout/uploaded-entries.json"]
oper = upload
use = shell
reporter = JSON
device = ns
remainder = entries.json nightscout/recent-missing-entries.json
json_default = True

[report "nightscout/glucose.json"]
oper = mm-format-ns-glucose
use = shell
reporter = JSON
device = ns
remainder = monitor/glucose.json
json_default = True

[report "settings/pumpprofile.json"]
use = shell
bg_targets = settings/bg_targets.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
carb_ratios = settings/carb_ratios.json
device = get-profile
remainder = --model=settings/model.json
isf = settings/insulin_sensitivities.json

[report "enact/smb-suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = JSON
json_default = True
device = determine-basal
remainder = settings/autosens.json monitor/meal.json --microbolus --reservoir monitor/reservoir.json
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "enact/smb-enacted.json"]
device = pump
input = enact/smb-suggested.json
use = set_temp_basal
reporter = JSON

[report "enact/bolused.json"]
device = pump
input = enact/smb-suggested.json
use = bolus
reporter = JSON

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini
git = false

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[device "cgm"]
vendor = mmeowlink.vendors.mmeowlink
extra = cgm.ini

[vendor "pancreabble"]
path = .
module = pancreabble

[device "pbbl"]
vendor = pancreabble
extra = pbbl.ini

[report "upload/urchin-data.json"]
use = format_urchin_data
reporter = JSON
cgm_clock = monitor/clock.json
action = add
device = pbbl
glucose_history = monitor/glucose-unzoned.json
status_text = 
status_json = upload/urchin-status.json

